------------------------------------------------------------------------------------------------------------------
4장. * Numpy의 기본 : 배열과 벡터 계산		: 고성능의 과학계산 컴퓨팅과 데이터 분석에 필요한 패키지
					: 중요하게  사용되는 기능

1. Numpy ndarray : 다차원 배열 객체		: 대규모 데이터 집합을 담을 수 있는 빠르고 유연한 자료구조
				ndarray	: 같은 종류의 데이터를 담을 수 있는 포괄적인 다차원 배열 / 모든 원소는 같은 자료형 Must!!
				. shape() 	: 각 차원의 크기를 알려주는 
				. dtype()  	: 튜플과 배열에 저장된 자료형을 알려주는


1 - 1. ndarray 생성				: 배열 생성의 가장 쉬운 방법 : array()를 쓰는 것
				.array() 	: 입력 데이터를 ndarray로 변환함.
				.arange()	: 리스트 대신 ndarray로 반환함.
				.ones()  	: 배열 생성 + 내용을 모두 1로 초기화
				.zeros()	:                  +                     0으로 초기화
				.empty()	:                  + 값을 초기화 하진 않음 ( 가비지(의미없는) 값이 들어있음)
				.eye() 	: 단위행렬 생성 ( N x N )
				
				배열	: 연관된 데이터를 하나의 변수에 그룹핑 해서 관리하기 위한 방법
				리스트 	: 순서가 있는 데이터의 모임 / 빈틈없는 데이터의 적재
1 - 2.  ndarray 자료형
				.dtype()
				.astype()	: 명시적 형 변환

1 - 3. 배열과 스칼라 간의 연산 			: 벡터화 = for 반복문을 작성하지 않고 데이터를 일괄처리할 수 있는 점
				브로드캐스팅 : 크기가 다른 배열 간의 연산

1 - 4. 색인과 슬라이싱 기초		 	: 데이터의 부분 집합이나 개별 요소를 선택하기 위한 수많은 방법
					: 배열 = 
				배열조각(slice)은 원본 배열의 뷰
					: 데이터는 복사되지 않고 뷰에 대한 변경은 그대로 원본 배열에 반영이 된다.
					: [5] / [5:8] / [5:8] = 12 / 
					
	- 슬라이스 색인
1 - 5. 불리언(boolean) 색인
1 - 6. 팬시(fancy) 색인
1 - 7. 배열 전치와 축 바꾸기


2. 유니버셜 함수


3. 배열을 사용한 데이터 처리

3 - 1. 배열연산으로 조건절 표현하기
3 - 2. 수학 메서드와 통계 메서드
3 - 3. 불리언 배열을 위한 메서드
3 - 4. 정렬
3 - 5. 집합함수


4. 배열의 파일 입출력

4 - 1. 배열을 바이너리 형식으로 디스크에 저장하기
4 - 2. 텍스트 파일 불러오기와 저장하기


5. 선형대수


6. 난수생성


7. 계단 오르내리기 예제

7 - 1. 한 번에 계단 오르내리기 시뮬레이션 하기


------------------------------------------------------------------------------------------------------------------
12장. 고급 Numpy

1. ndarray 객체 내부 알아보기

1 - 1. Numpy dtype 구조


2. 고급 배열 조작 기법

2 - 1. 배열 재형성하기

2 - 2. C와 포트란 순서

2 - 3. 배열 이어붙이고 나누기

2 - 4. 원소 반복시키기 : repeat과 tile

2 - 5. 팬시 색인 : take와 put


3. 브로드캐스팅

3 - 1. 다른 축에 대해 브로드캐스팅하기

3 - 2. 브로드캐스팅을 이용해 배열에 값 대입하기


4. 고급 ufunc 사용법

4 - 1. ufunc 인스턴스 메서드

4 - 2. 사용자 ufunc


5. 구조화된 배열과 레코드 배열

5 - 1. 중첩된 dtype과 다차원 필드

5 - 2. 구조화된 배열을 사용해야 하는 이유

5 - 3. 구조화된 배열 다루기


6. 정렬에 관하여

6 - 1. 간접정렬 : argsort와 lexsort

6 - 2. 다른 정렬 알고리즘

6 - 3. numpy.searchsorted : 정렬된 배열에서 원소 찾기


7. NumPy matrix 클래스


8. 고급 배열 입출력

8 - 1. 메모리 맵 파일

8 - 2. HDF5 및 기타 배열 저장 옵션


9. 성능 팁

9 - 1. 인접 메모리의 중요성

9 - 2. 기타 성능 옵션 : Cython, f2py, C





------------------------------------------------------------------------------------------------------------------
5장. pandas 시작하기


1. pandas 자료 구조 소개

1 - 1. Series

1 - 2. DataFrame

1 - 3. 색인 객체


2. 핵심기능

2 - 1. 재색인

2 - 2. 하나의 로우 or 칼럼 삭제하기

2 - 3. 색인하기, 선택하기, 거르기

2 - 4. 산술연산과 데이터 정렬
	- 산술연산 메서드에 채워 넣을 값 지정하기
	- DataFrame과 Series 간의 연산

2 - 5. 함수 적용과 매핑

2 - 6. 정렬과 순위

2 - 7. 중복 색인


3. 기술 통계 계산과 요약

3 - 1. 상관관계와 공분산

3 - 2. 유일 값, 값 세기, 멤버십


4. 누락된 데이터 처리하기

4 - 1. 누락된 데이터 골라내기

4 - 2. 누락된 값 채우기


5. 계층적 색인

5 - 1. 계층 순서 바꾸고 정렬하기

5 - 2. 단계별 요약통계

5 - 3. DataFrame의 칼럼 사용하기


6. pandas와 관련된 기타 주제

6 - 1. 정수 색인

6 - 2. Panel 데이터



------------------------------------------------------------------------------------------------------------------
6장. 데이터 로딩, 저장, 파일형식

1. 텍스트 파일 이용하는 방법

1 - 1. 텍스트 파일 조금씩 읽어오기

1 - 2. 데이터를 텍스트 형식으로 기록하기

1 - 3. 수동으로 구분 형식 처리하기

1 - 4. Json 데이터

1 - 5. XML과 HTML : 웹 내용 긁어오기
	- lxml.objectify 이용해 XML 파싱하기


2. 이진 데이터 형식

2 - 1. HDF5 형식 사용하기

2 - 2. MS Excel파일에서 데이터 읽어오기


3. HTML, 웹 API와 함께 사용하기

4. 데이터베이스와 함께 사용하기
	- MongoDB에 데이터 저장하고 불러오기



------------------------------------------------------------------------------------------------------------------
7장. 데이터 준비하기 : 다듬기, 변형, 병합

1. 데이터 합치기

1 - 1. 데이터베이스 스타일로 DataFrame 합치기

1 - 2. 색인 Merge 하기

1 - 3. 축 따라 이어붙이기

1 - 4. 겹치는 데이터 합치기


2. 재형성과 피벗

2 - 1. 계층적 색인으로 재형성하기

2 - 2. 피버팅으로 데이터 나열 방식 바꾸기











